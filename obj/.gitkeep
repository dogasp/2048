int cx, nb_evo = 0, z = 1;
for (int j = 0; j < gridSize; j ++){
    for (int i = gridSize-1; i > 0; i--){
        z = 1;
        while (1){
            if (z<gridSize-1){
                if (grid[i][j] == grid[i-z][j]){
                    printf("bite");
                    grid[i][j] = grid[i][j]*2 ;
                    grid[i-z][j] = 0;
                    nb_evo = 1;
                    break;
                    }
                else {
                    z++;
                    }
                }
            else break;
        }
    }
}
for (int j = 0; j < gridSize; j ++){
    for (int i = gridSize-2; i > -1; i --){
        cx = i;
        while (1){
            if(grid[cx][j] != 0 && grid[cx+1][j] == 0){
                grid[cx+1][j] = grid[cx][j];
                grid[cx][j] = 0;
                nb_evo = 1;
            }
            else break;
            cx ++;
            if (cx == -1) break;
        }
    }
